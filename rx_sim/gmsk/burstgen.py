#!/usr/bin/env python3


# burst assembly

#tailbits are zero

# 3 tail
# 57 data
# 1 control

# 26 midamble



# 1 control
# 57 data
# 3 tail

#diffencoder starts off as infinite strema of ones

# THEN DIFFENCODE and send to {1,-1}


import numpy as np


def normal_burst(left_data, midamble, right_data):
    assert(len(left_data)  == 58)
    assert(len(midamble)   == 26)
    assert(len(right_data) == 58)
    tail_bits = np.array([0,0,0])
    burst_data = np.concatenate((tail_bits, left_data, midamble, right_data, tail_bits))
    return burst_data

def diffencode(bits):
    encoded_bits = []
    prev = 1
    for i in bits:
        t = i ^ prev
        encoded_bits.append(1-2*t)
        prev = i
    return encoded_bits






#Table 5.2.3a TSC Set 1 - GMSK

#0 (0,0,1,0,0,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,1,0,1,1,1)
#1 (0,0,1,0,1,1,0,1,1,1,0,1,1,1,1,0,0,0,1,0,1,1,0,1,1,1)
#2 (0,1,0,0,0,0,1,1,1,0,1,1,1,0,1,0,0,1,0,0,0,0,1,1,1,0)
#3 (0,1,0,0,0,1,1,1,1,0,1,1,0,1,0,0,0,1,0,0,0,1,1,1,1,0)
#4 (0,0,0,1,1,0,1,0,1,1,1,0,0,1,0,0,0,0,0,1,1,0,1,0,1,1)
#5 (0,1,0,0,1,1,1,0,1,0,1,1,0,0,0,0,0,1,0,0,1,1,1,0,1,0)
#6 (1,0,1,0,0,1,1,1,1,1,0,1,1,0,0,0,1,0,1,0,0,1,1,1,1,1)
#7 (1,1,1,0,1,1,1,1,0,0,0,1,0,0,1,0,1,1,1,0,1,1,1,1,0,0)
#Table 5.2.3b TSC Set 2 - GMSK
#Training
#Sequence
#Code
#(TSC)
#Training sequence bits (BN61, BN62,…,BN86)
#0 (0,1,1,0,0,0,1,0,0,0,1,0,0,1,0,0,1,1,1,1,0,1,0,1,1,1)
#1 (0,1,0,1,1,1,1,0,1,0,0,1,1,0,1,1,1,0,1,1,1,0,0,0,0,1)
#2 (0,1,0,0,0,0,0,1,0,1,1,0,0,0,1,1,1,0,1,1,1,0,1,1,0,0)
#3 (0,0,1,0,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,0,1,0,0,0,0)
#4 (0,1,1,1,0,1,0,0,1,1,1,1,0,1,0,0,1,1,1,0,1,1,1,1,1,0)
#5 (0,1,0,0,0,0,0,1,0,0,1,1,0,1,0,1,0,0,1,1,1,1,0,0,1,1)
#6 (0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,0,1,1,0,1,1,1,0,1,0,1)
#7 (0,1,0,0,0,1,0,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,1,0,0,1)
#Table 5.2.3c TSC Set 3 - GMSK
#Training
#Sequence
#Code
#(TSC)
#Training sequence bits (BN61, BN62,…,BN86)
#0 (1,1,0,0,0,0,1,0,0,1,0,0,0,1,1,1,1,0,1,0,1,0,0,0,1,0)
#1 (0,0,1,0,1,1,1,1,1,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0)
#2 (1,1,0,0,1,0,0,0,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,1,1,0)
#3 (0,0,1,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0,1,0,1,1,0,0)
#4 (0,0,0,1,1,1,1,0,1,0,1,1,1,0,1,0,0,0,0,1,0,0,0,1,1,0)
#5 (1,1,0,0,1,1,1,1,0,1,0,1,0,1,1,1,1,0,0,1,0,0,0,0,0,0)
#6 (1,0,1,1,1,0,0,1,1,0,1,0,1,1,1,1,1,1,0,0,0,1,0,0,0,0)
#7 (1,1,1,0,0,1,0,1,1,1,1,0,1,1,1,0,0,0,0,0,1,0,0,1,0,0)
#Table 5.2.3d TSC Set 4 - GMSK
#Training
#Sequence
#Code
#(TSC)
#Training sequence bits (BN61, Bn62,…,BN86)
#0 (1,1,0,0,1,1,1,0,1,0,0,0,0,0,1,0,0,0,1,1,0,1,0,0,0,0)
#1 (0,1,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,1,1,0,0,0,0)
#2 (1,1,1,0,0,1,0,0,0,0,0,1,0,1,0,1,0,0,1,1,1,0,0,0,0,0)
#3 (0,1,1,0,1,1,0,0,1,1,1,1,1,0,1,0,1,0,0,0,0,1,1,0,0,0)
#4 (1,1,0,1,1,0,0,0,0,1,0,0,0,0,1,0,0,0,1,0,1,1,0,0,0,0)
#5 (1,1,0,1,0,0,1,1,1,1,1,1,1,0,1,0,0,0,1,1,0,1,0,1,1,0)
#6 (0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,0)
#7 (0,1,0,1,1,1,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1,1,0)
